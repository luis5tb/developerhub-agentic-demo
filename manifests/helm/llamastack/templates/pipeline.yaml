apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: {{ .Values.name }}-pipeline
  namespace: {{ $.Values.llamastackNamespace }}
  labels:
    type: pipeline
    backstage.io/kubernetes-id: ${{values.component_id}}
spec:
  params:
    - name: source-repo
      description: llamastack source repo
      type: string
      default: {{ .Values.llamastackSource }}
    - name: source-branch
      description: llamastack source branch to build from
      default: {{ .Values.llamastackSourceBranch }}
      type: string
    - name: output-image
      description: reference of the image that will get created
      default: {{ .Values.image.url }}
      type: string
    - name: chromadb-image
      description: reference of the image that will get created
      default: {{ .Values.chromaImage.repository }}
      type: string
  tasks:
    - name: git-clone-llamastack
      params:
        - name: URL
          value: $(params.source-repo)
        - name: REVISION
          value: $(params.source-branch)
        - name: SUBDIRECTORY
          value: llama-stack
      taskRef:
        resolver: cluster
        params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      workspaces:
        - name: output
          workspace: shared-folder
    - name: git-clone-llamamodels
      params:
        - name: URL
          value: https://github.com/meta-llama/llama-models.git
        - name: REVISION
          value: main
        - name: SUBDIRECTORY
          value: llama-models
      taskRef:
        resolver: cluster
        params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      workspaces:
        - name: output
          workspace: shared-folder
    - name: git-clone-chroma
      params:
        - name: URL
          value: ${{values.source_repository}}
        - name: REVISION
          value: main
        - name: SUBDIRECTORY
          value: template
      taskRef:
        resolver: cluster
        params:
        - name: kind
          value: task
        - name: name
          value: git-clone
        - name: namespace
          value: openshift-pipelines
      workspaces:
        - name: output
          workspace: shared-folder
    - name: buildah-chroma
      params:
        - name: IMAGE
          value: $(params.chromadb-image)
        - name: DOCKERFILE
          value: template/skeleton/chromaDockerfile
      runAfter:
        - git-clone-chroma
      taskRef:
        resolver: cluster
        params:
        - name: kind
          value: task
        - name: name
          value: buildah
        - name: namespace
          value: openshift-pipelines
      workspaces:
        - name: source
          workspace: shared-folder
    {{- if $.Values.llamastackBuildConfig }}
    - name: llamastack-build-config
      taskRef:
        name: llamastack-build-config
      runAfter:
        - git-clone-llamastack
        - git-clone-llamamodels
      workspaces:
        - name: output
          workspace: shared-folder
    {{- else }}
    - name: llamastack-build-template
      taskRef:
        name: llamastack-build-template
      runAfter:
        - git-clone-llamastack
        - git-clone-llamamodels
      workspaces:
        - name: output
          workspace: shared-folder
    {{- end }}
    - name: create-run-configmap
      taskRef:
        name: create-run-configmap
      runAfter:
        {{- if $.Values.llamastackBuildConfig }}
        - llamastack-build-config
        {{- else }}
        - llamastack-build-template
        {{- end }}
      workspaces:
        - name: output
          workspace: shared-folder
  workspaces:
    - name: shared-folder
